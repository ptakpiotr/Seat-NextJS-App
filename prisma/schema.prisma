// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model News {
  id          BigInt @id @default(autoincrement())
  title       String
  description String
  image       String
  tags        Tag[]
  author      Author @relation(fields: [authorId], references: [id])
  authorId    String
}

model Tag {
  id   BigInt @id @default(autoincrement())
  name String
  news News[]
}

model Event {
  id       Int      @id @default(autoincrement())
  start    DateTime
  end      DateTime
  info     String
  author   Author   @relation(fields: [authorId], references: [id])
  authorId String
  objects  Object[]
}

model Author {
  id      String   @id
  name    String   @unique
  news    News[]
  event   Event[]
}

model Object {
  id            String       @id @default(uuid())
  coords        Coords       @relation(fields: [coordsId], references: [id])
  type          ObjectMode?
  rotation      Float
  dimensions    Dimensions   @relation(fields: [dimensionsId], references: [id])
  reservation   Reservation? @relation(fields: [reservationId], references: [id])
  coordsId      String
  dimensionsId  String
  reservationId String?
  event         Event        @relation(fields: [eventId], references: [id])
  eventId       Int
  authorId      String
}

model Coords {
  id     String   @id @default(uuid())
  x      Float
  y      Float
  Object Object[]
}

enum ObjectMode {
  RECT
  CIRCLE
}

model Dimensions {
  id     String   @id @default(uuid())
  width  Float
  height Float
  radius Float
  Object Object[]
}

model Reservation {
  id         String   @id @default(uuid())
  isReserved Boolean
  by         String?
  Object     Object[]
}
